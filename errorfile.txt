PS C:\Terr\Terraform\Project\Sample1> Terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

aws_s3_bucket.main: Refreshing state... [id=terraform-learning-production-ap-south-1]

------------------------------------------------------------------------

No changes. Infrastructure is up-to-date.

This means that Terraform did not detect any differences between your
configuration and real physical resources that exist. As a result, no
actions need to be performed.
PS C:\Terr\Terraform\Project\Sample1> Terraform apply
aws_s3_bucket.main: Refreshing state... [id=terraform-learning-production-ap-south-1]

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.

Outputs:

s3_bucket_designed = terraform-learning-production-ap-south-1
s3_bucket_domain = terraform-learning-production-ap-south-1.s3.amazonaws.com
PS C:\Terr\Terraform\Project\Sample1> cd ..
PS C:\Terr\Terraform\Project> cd Sample2
PS C:\Terr\Terraform\Project\Sample2> Terraform init

Initializing the backend...

Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Checking for available provider plugins...
- Downloading plugin for provider "aws" (terraform-providers/aws) 2.14.0...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.aws: version = "~> 2.14"

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
PS C:\Terr\Terraform\Project\Sample2> Terraform plan
var.remote_state_bucket
  remote state bucket name

  Enter a value:
var.remote_state_bucket
  remote state bucket name

  Enter a value:

Error: Failed to request interactive input

Terraform attempted to request a value for var.remote_state_bucket
interactively, but encountered an error: interrupted.

PS C:\Terr\Terraform\Project\Sample2> Terraform plan -var-file="production.tfvars"

Error: Unsupported attribute

  on output.tf line 2, in output "s3_bucket_name":
   2: value ="${data.terraform_remote_state.trs.s3_bucket_designed}"

This object has no argument, nested block, or exported attribute named
"s3_bucket_designed".

PS C:\Terr\Terraform\Project\Sample2>



